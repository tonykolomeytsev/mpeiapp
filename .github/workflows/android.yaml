name: Android Debug Build

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  detekt:
    name: Detekt
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Detekt
        uses: natiginfo/action-detekt-all@1.22.0
        with:
          args: --config detekt.yaml --language-version 1.7.20 --input modules

  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Materialize google services
        run: .ci/materialize.sh $GOOGLE_SERVICES_DEBUG modules/app/google-services.json
        env:
          GOOGLE_SERVICES_DEBUG: ${{ secrets.GOOGLE_SERVICES_DEBUG }}

      - name: Cache gradle files
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Cache build files
        uses: actions/cache@v1
        with:
          path: build
          key: ${{ runner.OS }}-build-${{ hashFiles('**/*.kt') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-

      - name: Unit tests
        run: ./gradlew -Pci test --stacktrace
        env:
          MAP_KEY: ${{ secrets.MAP_KEY }}

      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_BOT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: Tests passed on the *dev* branch during ${{ github.event_name }} event.

  build:
    name: Debug Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Materialize google services
        run: .ci/materialize.sh $GOOGLE_SERVICES_DEBUG modules/app/google-services.json
        env:
          GOOGLE_SERVICES_DEBUG: ${{ secrets.GOOGLE_SERVICES_DEBUG }}

      - name: Cache gradle files
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Cache build files
        uses: actions/cache@v1
        with:
          path: build
          key: ${{ runner.OS }}-build-${{ hashFiles('**/*.kt') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-

      - name: Build with Gradle
        run: ./gradlew -Pci assembleDebug
        env:
          MAP_KEY: ${{ secrets.MAP_KEY }}

      - name: Upload Debug APK
        uses: actions/upload-artifact@v1
        with:
          name: App Debug
          path: modules/app/build/outputs/apk/debug/app-debug.apk

      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_BOT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: Successful build on the *dev* branch during ${{ github.event_name }} event.
