name: Deploy release-alpha to Google Play

on:
  push:
    tags:
      - "release/*"

jobs:
  build:
    name: Release Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Materialize google services
        run: .ci/materialize.sh $GOOGLE_SERVICES modules/app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}

      - name: Release tests
        run: ./gradlew -Pci testReleaseUnitTest
        env:
          MAP_KEY: ${{ secrets.MAP_KEY }}

      - name: Build Release AAB
        run: ./gradlew -Pci bundleRelease
        env:
          MAP_KEY: ${{ secrets.MAP_KEY }}

      - name: Sign AAB
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: modules/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.KEY_STORE_FILE }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Create service_account.json
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Deploy to Google Play (ALPHA)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: kekmech.ru.mpeiapp
          releaseFiles: modules/app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed

      - name: Put release version from tag name to ENV
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/*/}" >> $GITHUB_ENV

      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_BOT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: ðŸ“± **MpeiX Android ${{ env.RELEASE_VERSION }}** has been deployed to Google Play
