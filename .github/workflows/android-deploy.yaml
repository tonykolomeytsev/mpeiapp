name: Release Flow

on:
  push:
    tags:
      - "release/*"

env:
  GRADLE_OPTS: "-Dorg.gradle.unsafe.configuration-cache=false"

jobs:
  build:
    name: Build Artifacts
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    outputs:
      release_version: ${{ steps.version.outputs.release_version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: adopt

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Materialize sensitive info
        run: |
          .github/materialize.sh $GOOGLE_SERVICES modules/app/google-services.json
          .github/materialize.sh $KEY_STORE_FILE keystore.jks
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          KEY_STORE_FILE: ${{ secrets.KEY_STORE_FILE }}

      - name: Build Release artifacts
        run: ./gradlew :app:bundleRelease :app:assembleRelease
        env:
          MAP_KEY: ${{ secrets.MAP_KEY }}
          KEY_ALIAS: ${{ secrets.ALIAS }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Extract release version
        id: version
        run: |
          echo "release_version=${GITHUB_REF#refs/*/*/}" >> $GITHUB_OUTPUT

      - name: Rename signed release APK
        run: |
          ORIGINAL_APK="modules/app/build/outputs/apk/release/app-release.apk"
          RENAMED_APK="mpeix-gms-${{ steps.version.outputs.release_version }}-release.apk"
          mv "$ORIGINAL_APK" "$RENAMED_APK"
          echo "Renamed APK to $RENAMED_APK"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: MpeiX APK
          path: "*.apk"

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: MpeiX AAB
          path: modules/app/build/outputs/bundle/release/app-release.aab

  github-release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: MpeiX APK
          path: .

      - name: Publish Draft Release on GitHub
        uses: softprops/action-gh-release@v2.2.2
        with:
          name: ${{ needs.build.outputs.release_version }}
          draft: true
          files: "*.apk"

  google-play:
    name: Publish to Google Play
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download AAB artifact
        uses: actions/download-artifact@v4
        with:
          name: MpeiX AAB
          path: .

      - name: Create service_account.json
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Deploy to Google Play (ALPHA)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: kekmech.ru.mpeiapp
          releaseFiles: app-release.aab
          track: internal
          status: completed

      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_BOT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: ðŸ“± **MpeiX Android ${{ needs.build.outputs.release_version }}** has been deployed to Google Play
