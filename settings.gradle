pluginManagement {
    includeBuild("build-logic")
    repositories {
        gradlePluginPortal()
        google()
    }
}

plugins {
    id("com.gradle.develocity") version "3.19.2"
}

// https://docs.gradle.com/enterprise/gradle-plugin/#controlling_when_build_scans_are_published
develocity {
    buildScan {
        uploadInBackground = false
        publishing.onlyIf { false }
        termsOfUseUrl = "https://gradle.com/help/legal-terms-of-use"
        termsOfUseAgree = "yes"
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
    versionCatalogs.create("mpeix").from(files("gradle/mpeix.versions.toml"))
}

rootProject.name = "mpeix"

// Automatically add all project modules
def sourcesDir = layout.rootDirectory.dir("modules").asFile
fileTree(sourcesDir) {
    exclude("**/build/**", "**/src/**", "build-logic", ".*")
    include("*/**/build.gradle")
}.forEach { buildScriptFile ->
    def moduleDir = buildScriptFile.parentFile
    // do NOT use absolute paths, or Gradle will shit himself
    def relativePath = sourcesDir.toPath().relativize(moduleDir.toPath())
    def moduleName = ":$relativePath".replace(File.separator, "_")

    include(moduleName)
    project(moduleName).projectDir = moduleDir
}


